{"version":3,"sources":["components/NavBar.js","components/SearchBar.js","components/Hero.js","components/CharacterCard.js","components/Loading.js","components/Pagination.js","components/Popular.js","components/Modal.js","pages/Home.js","components/StatsBar.js","components/ProgressBar.js","components/StatContent.js","components/SingleHeroBanner.js","pages/Single.js","pages/Favorites.js","pages/Error.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","React","Component","SearchBar","props","handleChange","event","setState","query","target","value","search","preventDefault","searchHeroes","state","onSubmit","this","type","name","onChange","placeholder","Hero","src","alt","CharacterCard","addDefaultSrc","e","createSlug","id","split","join","publisher","image","isFavorite","onError","onClick","removeFavorite","bind","icon","faTrashAlt","Loading","faSpinner","spin","Pagination","nextPage","prevPage","totalPages","currentPage","currentPageStyle","color","backgroundColor","borderRadius","Fragment","style","Popular","searchByPublisher","Modal","message","propType","PropTypes","string","Home","fetchData","isLoading","fetch","process","then","res","json","data","response","showModal","error","pages","results","length","push","splice","savedData","catch","err","allCharactersArray","forEach","item","filtered","filter","character","biography","modalMessage","closeModal","window","setTimeout","errMess","map","hero","key","url","StatsBar","selectedStyle","background","unSelectedStyle","selected","changeStats","ProgressBar","height","width","status","border","StatContent","appearance","gender","race","weight","eyeColor","hairColor","powerstats","combat","durability","intelligence","power","speed","strength","work","base","occupation","groupAffiliation","connections","relatives","parseInt","SingleHeroBanner","addToFavorites","favoritesArray","JSON","parse","localStorage","getItem","setItem","stringify","alterEgos","placeOfBirth","fullName","faStar","aliases","i","renderAliases","Single","componentDidMount","stat","match","params","heroId","console","log","Favorites","filteredFavorites","favorites","Error","App","basename","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcc9d03d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.scss';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"navBar\">\r\n                <nav>\r\n                    <div className=\"navItem\">\r\n                        <Link to=\"/\"><h2>Superhero Finder</h2></Link>\r\n                    </div>\r\n                    <ul>\r\n                        <Link to=\"/\"><li>Home</li></Link>\r\n                        <Link to=\"/favorites\"><li>Favorites</li></Link>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class SearchBar extends Component {\r\n    static propTypes = {\r\n        searchHeroes: PropTypes.func,\r\n    }\r\n        constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: '',\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ query: event.target.value })\r\n    }\r\n\r\n    search = event => {\r\n        event.preventDefault();\r\n        this.props.searchHeroes(this.state.query);\r\n        this.setState({ query: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.search}>\r\n                    <input type=\"text\" name=\"query\" onChange={this.handleChange} value={this.state.query} />\r\n                    <button placeholder=\"Enter a name to search...\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Hero(props) {\r\n    return (\r\n        <div className=\"heroBanner\">\r\n            <div className=\"overlay\"></div>\r\n            <div className=\"heading\">\r\n                <h1>SUPERHERO FINDER</h1>\r\n                <SearchBar searchHeroes={props.searchHeroes} />\r\n            </div>\r\n            <img src=\"http://www.psdgraphics.com/file/grunge-halftone.jpg\" alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nHero.propTypes = {\r\n    searchHeroes: PropTypes.func\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass CharacterCard extends React.Component {\r\n    static propTypes = {\r\n        name: PropTypes.string,\r\n        id: PropTypes.string,\r\n        publisher: PropTypes.string,\r\n        image: PropTypes.string,\r\n        isFavorite: PropTypes.bool,\r\n        removeFavorite: PropTypes.func,\r\n    }\r\n\r\n    // Many of the image links from the api are broken. This sets a default image source when image fails to load\r\n    addDefaultSrc = (e) => {\r\n        e.target.src = \"http://cdn.collider.com/wp-content/uploads/2018/06/big-hero-6-the-series-11.jpg\"\r\n    }\r\n\r\n    // Adds characters name to the url address\r\n    createSlug = (name, id) => {\r\n        return `/hero/${id}/${name.split(\" \").join(\"-\")}`;\r\n    }\r\n\r\n    render() {\r\n         const { name, id, publisher, image, isFavorite } = this.props;\r\n        return(\r\n            <div className=\"characterCard\">\r\n                <Link to={this.createSlug(name, id)} className=\"characterImage\">\r\n                    <img onError={this.addDefaultSrc} src={image} alt={name} />\r\n                </Link>\r\n                <div className=\"comicPill\">\r\n                    {publisher}\r\n                </div>\r\n                <div className=\"characterName\">\r\n                    <h2>{name}</h2>\r\n                </div>\r\n                {isFavorite ? <div onClick={this.props.removeFavorite.bind(this, id)} className=\"removeFavorite\"><FontAwesomeIcon icon={faTrashAlt} /></div> : null}\r\n            </div>\r\n        )\r\n    }\r\n  \r\n\r\n}\r\n\r\nexport default CharacterCard;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\r\n \r\nfunction Loading() {\r\n    return(\r\n        <div className=\"spinner\">\r\n            <p>Loading...</p>\r\n            <FontAwesomeIcon icon={faSpinner} spin />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Pagination extends Component {\r\n    static propTypes = {\r\n        nextPage: PropTypes.func,\r\n        prevPage: PropTypes.func,\r\n        totalPages: PropTypes.number,\r\n        currentPage: PropTypes.number\r\n    }\r\n\r\n    render() {\r\n        const {nextPage, prevPage, totalPages, currentPage } = this.props;\r\n        const currentPageStyle = {color: \"black\", backgroundColor: \"white\", borderRadius: \"2px\" }\r\n        return (\r\n            <React.Fragment>\r\n                {totalPages > 1 ? <nav className=\"pagination\">\r\n                    <ul>\r\n                        <li onClick={prevPage}>Previous</li>\r\n                        <li style={currentPage - 1 === 0 ? currentPageStyle : null} >{currentPage - 1 === 0 ? currentPage : currentPage + 1 <= totalPages ? currentPage - 1 : currentPage - 2}</li>\r\n                        <li style={currentPage - 1 > 0 && currentPage + 1 <= totalPages ? currentPageStyle : null } >{currentPage - 1 === 0 ? currentPage + 1 : currentPage + 1 <= totalPages ? currentPage : currentPage - 1}</li>\r\n                        <li style={currentPage === totalPages ? currentPageStyle : null } >{currentPage - 1 === 0 ? currentPage + 2 : currentPage + 1 <= totalPages ? currentPage + 1 : currentPage}</li>\r\n                        <li onClick={nextPage}>Next</li>\r\n                    </ul>\r\n                </nav> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Popular extends Component {\r\n    static propTypes = {\r\n        searchByPublisher: PropTypes.func,\r\n    }\r\n        render() {\r\n        return (\r\n            <div className=\"popularPublishers\">\r\n                <div onClick={this.props.searchByPublisher.bind(this, \"Marvel Comics\")} className=\"publisher\">\r\n                    <p>Marvel Comics</p>\r\n                </div>\r\n                <div onClick={this.props.searchByPublisher.bind(this, \"DC Comics\")} className=\"publisher\">\r\n                    <p>DC Comics</p>\r\n                </div>\r\n                <div onClick={this.props.searchByPublisher.bind(this, \"Dark Horse Comics\")} className=\"publisher last\">\r\n                    <p>Dark Horse Comics</p>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Modal(props) {\r\n    return (\r\n        <div className=\"modal\">\r\n            <p>{props.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nModal.propType = {\r\n    message: PropTypes.string\r\n}\r\n","import React, { Component } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport Hero from '../components/Hero';\r\nimport CharacterCard from '../components/CharacterCard';\r\nimport Loading from '../components/Loading';\r\nimport Pagination from '../components/Pagination';\r\nimport Popular from '../components/Popular';\r\nimport Modal from '../components/Modal';\r\nimport '../App.scss';\r\n\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: {},\r\n            savedData: {},\r\n            errMess: '',\r\n            currentPage: 1,\r\n            totalPages: 1,\r\n            modalMessage: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(\"t\");\r\n    }\r\n\r\n    fetchData = (query) => {\r\n        this.setState({ isLoading: true });\r\n        const key = process.env.REACT_APP_API_KEY\r\n        fetch(`https://www.superheroapi.com/api.php/${key}/search/${query}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.response === \"error\") {\r\n                this.showModal(data.error);\r\n            }\r\n            let pages = [];\r\n            while(data.results.length) {\r\n                pages.push(data.results.splice(0,25))\r\n            }\r\n            this.setState({ data: pages, savedData: pages, totalPages: pages.length, isLoading: false });\r\n        })\r\n        .catch(err => {\r\n            this.setState({ isLoading: false });\r\n            this.showModal(\"Oops, something went wrong. Please try again!\");\r\n        })\r\n    }\r\n\r\n    searchByPublisher = (publisher) => {\r\n        this.setState({ isLoading: true })\r\n        const allCharactersArray = [];\r\n        this.state.savedData.forEach(item => allCharactersArray.push(...item));\r\n        const filtered = allCharactersArray.filter(character => character.biography.publisher === publisher);\r\n        let pages = [];\r\n        while(filtered.length) {\r\n            pages.push(filtered.splice(0,25))\r\n        }\r\n        this.setState({ data: pages, totalPages: pages.length, isLoading: false });\r\n        \r\n    }\r\n\r\n    nextPage = () => {\r\n        if (this.state.currentPage + 1 <= this.state.totalPages) {\r\n            this.setState({ currentPage: this.state.currentPage + 1 });\r\n        }\r\n    }\r\n\r\n    prevPage = () => {\r\n        if(this.state.currentPage - 1 > 0) {\r\n            this.setState({ currentPage: this.state.currentPage - 1 });\r\n        }\r\n    }\r\n\r\n    showModal = (message) => {\r\n        this.setState({ showModal: true, modalMessage: message });\r\n        this.closeModal();\r\n    }\r\n\r\n    closeModal = () => {\r\n        window.setTimeout(() => {\r\n            this.setState({ showModal: false })\r\n        }, 1500);\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <Hero searchHeroes={this.fetchData} />\r\n                <Popular searchByPublisher={this.searchByPublisher} />\r\n                {this.state.isLoading ? <Loading /> : null}\r\n                {this.state.showModal ? <Modal message={this.state.modalMessage} /> : null}\r\n                <main className=\"cardContainer\">\r\n                    {this.state.isLoading ? null : this.state.data[this.state.currentPage - 1].map(hero => {\r\n                        return (\r\n                            <CharacterCard \r\n                                key={hero.id} \r\n                                name={hero.name} \r\n                                id={hero.id} \r\n                                isFavorite={false}\r\n                                publisher={hero.biography.publisher} \r\n                                image={hero.image.url} />\r\n                        )\r\n                    })}\r\n                </main>\r\n                <Pagination \r\n                    currentPage={this.state.currentPage} \r\n                    totalPages={this.state.data.length} \r\n                    nextPage={this.nextPage} \r\n                    prevPage={this.prevPage} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class StatsBar extends Component {\r\n    static propTypes = {\r\n        changeStats: PropTypes.func,\r\n        selected: PropTypes.string,\r\n    }\r\n\r\n    render() {\r\n        const selectedStyle = {\r\n            background: \"black\", \r\n            color: \"#fff\"\r\n        }\r\n    \r\n        const unSelectedStyle = {\r\n            background: \"#fff\",\r\n            color: \"black\"\r\n        }\r\n\r\n        const { selected } = this.props\r\n        return (\r\n            <div className=\"statsBar\">\r\n                <div onClick={this.props.changeStats.bind(this, \"appearance\")} style={selected === \"appearance\" ? selectedStyle : unSelectedStyle } className=\"stats\">\r\n                    <p>Appearance</p>\r\n                </div>\r\n                <div onClick={this.props.changeStats.bind(this, \"connections\")} style={selected === \"connections\" ? selectedStyle : unSelectedStyle } className=\"stats\">\r\n                    <p>Connections</p>\r\n                </div>\r\n                <div onClick={this.props.changeStats.bind(this, \"powerStats\")} style={selected === \"powerStats\" ? selectedStyle : unSelectedStyle } className=\"stats last\">\r\n                    <p>Power Stats</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ProgressBar(props) {\r\n    const container = {\r\n        width: \"200px\", \r\n        height: \"10px\", \r\n        background: \"#fff\", \r\n        borderRadius: \"5px\",\r\n        border: \"solid 1px #fff\", \r\n    }\r\n\r\n    const item = {\r\n        height: \"100%\", \r\n        width: `${props.status * 2}px`, \r\n        background: \"black\",\r\n        borderRadius: \"5px 0px 0px 5px\" \r\n    }\r\n\r\n    const item2 = {\r\n        height: \"100%\", \r\n        width: `198px`, \r\n        background: \"black\",\r\n        borderRadius: \"5px\" \r\n    }\r\n    \r\n    return (\r\n        <div style={container} className=\"ProgressBar\">\r\n            <div style={props.status > 98 ? item2 : item}className=\"status\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProgressBar.propTypes = {\r\n    status: PropTypes.number\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport ProgressBar from '../components/ProgressBar';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class StatContent extends Component {\r\n    static propTypes = {\r\n        selected: PropTypes.string,\r\n        hero: PropTypes.object\r\n    }\r\n\r\n    render() {\r\n        const { selected } = this.props;\r\n        const { gender, height, race, weight } = this.props.hero.appearance;\r\n        const { url } = this.props.hero.image;\r\n        const eyeColor = this.props.hero.appearance[\"eye-color\"];\r\n        const hairColor = this.props.hero.appearance[\"hair-color\"];\r\n        const { combat, durability, intelligence, power, speed, strength } = this.props.hero.powerstats;\r\n        const { base, occupation} = this.props.hero.work;\r\n        const groupAffiliation = this.props.hero.connections[\"group-affiliation\"];\r\n        const { relatives } = this.props.hero.connections;\r\n        \r\n        if(selected === \"appearance\") {\r\n            return (\r\n                <div className=\"statContent\">\r\n                    <h3>Appearance</h3>\r\n                    <div className=\"appearanceGrid\">\r\n                        <div>\r\n                            <p><span className=\"stat\">Eye Color: </span>{eyeColor}</p>\r\n                            <p><span className=\"stat\">Hair Color: </span>{hairColor}</p>\r\n                            <p><span className=\"stat\">Height: </span>{`${height[0]} - ${height[1]}`}</p>\r\n                            <p><span className=\"stat\">Weight: </span>{`${weight[0]} - ${weight[1]}`}</p>\r\n                            <p><span className=\"stat\">Gender: </span>{gender}</p>\r\n                            <p><span className=\"stat\">Race: </span>{race}</p>\r\n                        </div>\r\n                        <div>\r\n                            <img src={url} alt={this.props.hero.name} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (selected === \"connections\") {\r\n            return (\r\n                <div className=\"statContent\">\r\n                    <h3>Connections</h3>\r\n                    <p><span className=\"stat\">Group Affiliations: </span>{groupAffiliation}</p>\r\n                    <p><span className=\"stat\">Relatives: </span>{relatives}</p>\r\n                    <p><span className=\"stat\">Work: </span>{base}</p>\r\n                    <p><span className=\"stat\">Occupation: </span>{occupation}</p>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"statContent\">\r\n                    <h3>Power Stats</h3>\r\n                    <div className=\"grid\">\r\n                        <div className=\"item\">\r\n                            <p><span className=\"stat\">Combat: </span>{combat}%</p><ProgressBar status={parseInt(combat)} />\r\n                            <p><span className=\"stat\">Durability: </span>{durability}%</p><ProgressBar status={parseInt(durability)} />\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <p><span className=\"stat\">intelligence: </span>{intelligence}%</p><ProgressBar status={parseInt(intelligence)} />\r\n                            <p><span className=\"stat\">Power: </span>{power}%</p><ProgressBar status={parseInt(power)} />\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <p><span className=\"stat\">Speed: </span>{speed}%</p><ProgressBar status={parseInt(speed)} />\r\n                            <p><span className=\"stat\">Strength: </span>{strength}%</p><ProgressBar status={parseInt(strength)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class SingleHeroBanner extends React.Component {\r\n    static propTypes = {\r\n        hero: PropTypes.object,\r\n        showModal: PropTypes.func,\r\n    }\r\n\r\n    addToFavorites = (name, id, publisher, image) => {\r\n        const favoritesArray = JSON.parse(window.localStorage.getItem(\"favorites\")) || [];\r\n        if (favoritesArray.filter(item => item.id === id).length > 0) {\r\n            this.props.showModal(\"You already liked this character\")\r\n        } else {\r\n            const item = {\r\n                name,\r\n                id,\r\n                publisher,\r\n                image\r\n            }\r\n            favoritesArray.push(item);\r\n            window.localStorage.setItem(\"favorites\", JSON.stringify(favoritesArray));\r\n            this.props.showModal(`${name} was added to your favorites`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { image, name, id } = this.props.hero\r\n        const { biography } = this.props.hero;\r\n        const publisher = biography.publisher;\r\n        const alterEgos = biography[\"alter-egos\"];\r\n        const placeOfBirth = biography[\"place-of-birth\"];\r\n        const fullName = biography[\"full-name\"];\r\n\r\n        const renderAliases = () => {\r\n            const { aliases } = this.props.hero.biography;\r\n            if (aliases) {\r\n                if(aliases.length === 1) {\r\n                    return aliases[0];\r\n                } else if (aliases.length === 2) {\r\n                    return `${aliases[0]} and ${aliases[1]}`; \r\n                } else if (aliases.length === 3) {\r\n                    return (`${aliases[0]}, ${aliases[1]} and ${aliases[2]}`)\r\n                } else if (aliases.length > 3) {\r\n                    return aliases.map((item, i) => {\r\n                        if(i < aliases.length - 3) {\r\n                            return `${item}, `\r\n                        } else if(i < aliases.length - 2) {\r\n                            return `${item} and `\r\n                        } else if(i < aliases.length - 1) {\r\n                            return `${item}`\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                return (\" - \")\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"singleHeroBanner\">\r\n                <div className=\"singleImage\">\r\n                    <img src={image.url} alt={name} />\r\n                </div>\r\n                <div className=\"stats\">\r\n                    <button className=\"addToFavorites\" onClick={this.addToFavorites.bind(this, name, id, publisher, image.url)} ><FontAwesomeIcon className=\"icon\" icon={faStar} />Add to Favorites</button>\r\n                    <h2>{name}</h2>\r\n                    <p><span className=\"statsBold\">Full Name:</span> {fullName}</p>\r\n                    <p><span className=\"statsBold\">Aliases:</span> {renderAliases()}</p>\r\n                    <p><span className=\"statsBold\">Alter Egos:</span> {alterEgos}</p>\r\n                    <p><span className=\"statsBold\">Place of Birth:</span> {placeOfBirth}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n","import React, { Component } from 'react';\r\nimport Loading from '../components/Loading';\r\nimport NavBar from '../components/NavBar';\r\nimport Modal from '../components/Modal';\r\nimport StatsBar from '../components/StatsBar';\r\nimport StatContent from '../components/StatContent';\r\nimport SingleHeroBanner from '../components/SingleHeroBanner';\r\nimport '../App.scss';\r\n\r\nexport default class Single extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            errMess: '',\r\n            data: {},\r\n            showModal: false,\r\n            modalMessage: '',\r\n            selected: \"appearance\",\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData() {\r\n        const id = this.props.match.params.heroId\r\n        console.log(id)\r\n        const key = process.env.REACT_APP_API_KEY\r\n        fetch(`https://www.superheroapi.com/api.php/${key}/${id}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.setState({ data: data, isLoading: false });\r\n            console.log(this.state)\r\n        })\r\n        .catch(err => {\r\n            this.setState({ isLoading: false, errMess: \"Oops, something's not right\"})\r\n        })\r\n    }\r\n\r\n    showModal = (message) => {\r\n        this.setState({ showModal: true, modalMessage: message });\r\n        this.closeModal();\r\n    }\r\n\r\n    closeModal = () => {\r\n        window.setTimeout(() => {\r\n            this.setState({ showModal: false })\r\n        }, 1500);\r\n    }\r\n\r\n    changeStats = (stat) => {\r\n        this.setState({ selected: stat })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                {this.state.isLoading ? <Loading /> : <SingleHeroBanner showModal={this.showModal} hero={this.state.data} />}\r\n                <StatsBar selected={this.state.selected} changeStats={this.changeStats} />\r\n                {this.state.isLoading ? <Loading /> : <StatContent selected={this.state.selected} hero={this.state.data} />}\r\n                {this.state.showModal ? <Modal message={this.state.modalMessage} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CharacterCard from '../components/CharacterCard';\r\nimport NavBar from '../components/NavBar';\r\nimport Modal from '../components/Modal';\r\nimport '../App.scss';\r\n\r\nexport default class Favorites extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            favorites: [],\r\n            showModal: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ favorites: JSON.parse(window.localStorage.getItem(\"favorites\")) });\r\n    }\r\n\r\n    removeFavorite = (id) => {\r\n        const favorites = JSON.parse(window.localStorage.getItem(\"favorites\"));\r\n        const filteredFavorites = favorites.filter(item => item.id !== id);\r\n        window.localStorage.setItem(\"favorites\", JSON.stringify(filteredFavorites));\r\n        this.setState({ showModal: true, favorites: JSON.parse(window.localStorage.getItem(\"favorites\")) });\r\n        this.closeModal();\r\n    }\r\n\r\n    closeModal = () => {\r\n        window.setTimeout(() => {\r\n            this.setState({ showModal: false })\r\n        }, 1500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavBar />\r\n                {this.state.favorites.length > 0 ? null : <div className=\"message\">You have no favorites saved</div> }\r\n                <main className=\"cardContainer\">\r\n                    { this.state.favorites.length > 0 ? this.state.favorites.map(hero => {\r\n                    return <CharacterCard \r\n                                    key={hero.id} \r\n                                    name={hero.name} \r\n                                    id={hero.id} \r\n                                    isFavorite={true}\r\n                                    publisher={hero.publisher} \r\n                                    removeFavorite={this.removeFavorite}\r\n                                    image={hero.image} />\r\n                    }) : null}\r\n                    {this.state.showModal ? <Modal message=\"Character removed from your favorites\" /> : null}\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Error() {\r\n    return (\r\n        <div className=\"errorPage\">\r\n            <h1>Oops! This page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport Home from './pages/Home';\nimport Single from './pages/Single';\nimport Favorites from './pages/Favorites';\nimport Error from './pages/Error';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.scss';\n\n//Orignially tried to use the browserRouter, but ran into issues when deploying\nclass App extends React.Component {\n  render() {\n    return(\n      <Router basename=\"/week5-assignment/\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/hero/:heroId\" component={Single} />\n          <Route path=\"/favorites\" component={Favorites} />\n          <Route path=\"*\" component={Error} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}